{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker-image-with-nginx-nodejs/","result":{"data":{"site":{"siteMetadata":{"title":"Trainto.log()"}},"markdownRemark":{"id":"86553c1e-d564-5150-9535-df0e65d1b784","excerpt":"In this post, I’ll explain how to dockerize Nodejs app and Nginx as reverse proxy. The best or the most simple way might be just creating two docker images, one…","html":"<p>In this post, I’ll explain how to dockerize Nodejs app and Nginx as reverse proxy. The best or the most simple way might be just creating two docker images, one for Nginx and one for Nodejs. However I’ll create just one docker image includes both.</p>\n<h3>Create Nodejs app</h3>\n<p>For creating the docker image, let’s just create very simple Nodejs app here.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> nodeapp\n<span class=\"token builtin class-name\">cd</span> nodeapp\n<span class=\"token function\">npm</span> init\n\n<span class=\"token comment\"># I'll just enter for every prompts</span>\n\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save express</code></pre></div>\n<br />\n<p>Now we need to add index.js to run express server.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Example app listening on port </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Prepare nginx.conf and start script</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nodeapp\n |-- /node_modules\n |-- index.js\n |-- package.json\n |-- package-lock.json\n |-- nginx.conf\n |-- start.sh</code></pre></div>\n<h3>Dockerfile</h3>\n<p>There are many useful docker images we can use on docker hub. We will create our docker image based on one of the <a href=\"https://hub.docker.com/_/nginx\">Official Nginx docker images</a>.</p>\n<p>Let’s create Dockerfile like below.</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token comment\"># We will use nginx:mainline-alpine to minimize our docker image size.</span>\n<span class=\"token keyword\">FROM</span> nginx<span class=\"token punctuation\">:</span>mainline<span class=\"token punctuation\">-</span>alpine\n\n<span class=\"token comment\"># Copy nginx.conf file to the docker image</span>\n<span class=\"token keyword\">COPY</span> nginx.conf /etc/nginx/nginx.conf\n\n<span class=\"token comment\"># This line will install node and npm to the docker image.</span>\n<span class=\"token comment\"># With --repository=http://.... option, we can install latest nodejs version.</span>\n<span class=\"token keyword\">RUN</span> apk add <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>no<span class=\"token punctuation\">-</span>cache <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>repository=http<span class=\"token punctuation\">:</span>//dl<span class=\"token punctuation\">-</span>cdn.alpinelinux.org/alpine/edge/main nodejs npm\n\n<span class=\"token comment\"># Out nodejs app will be located /usr/src/app</span>\n<span class=\"token keyword\">WORKDIR</span> /usr/src/app\n\n<span class=\"token comment\"># Copy all our nodejs app into the docker image</span>\n<span class=\"token keyword\">COPY</span> . .\n\n<span class=\"token comment\"># Install pm2 globally</span>\n<span class=\"token keyword\">RUN</span> npm install <span class=\"token punctuation\">-</span>g pm2\n\n<span class=\"token comment\"># When your app is more complicated and need to be built before running</span>\n<span class=\"token comment\"># npm prune and npm cach clean to minimize the size of our docker image</span>\n<span class=\"token comment\"># RUN npm install \\</span>\n<span class=\"token comment\">#     &amp;&amp; npm run build \\</span>\n<span class=\"token comment\">#     &amp;&amp; npm prune --production \\</span>\n<span class=\"token comment\">#     &amp;&amp; npm cache clean --force</span>\n\n<span class=\"token keyword\">EXPOSE</span> 80\n\n<span class=\"token comment\"># COPY start.sh and make it executable</span>\n<span class=\"token keyword\">COPY</span> start.sh /usr/src/app/start.sh\n<span class=\"token keyword\">RUN</span> chmod 744 start.sh\n\n<span class=\"token keyword\">CMD</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/usr/src/app/start.sh\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3>Build docker image</h3>\n<p>Now we are very prepared to create the docker image.</p>\n<p>All we have to do here is just enter below command.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">docker build -t <span class=\"token operator\">&lt;</span>IMAGE_NAME_YOU_WANT<span class=\"token operator\">></span> <span class=\"token builtin class-name\">.</span></code></pre></div>","frontmatter":{"title":"How to make a docker image with Nginx and Nodejs","date":"February 15, 2020","description":"Nginx and Nodejs into one docker image"}}},"pageContext":{"slug":"/docker-image-with-nginx-nodejs/","previous":{"fields":{"slug":"/hang-loose-in-aloha-state-hawai-trip/"},"frontmatter":{"title":"Hang loose in the Aloha state - Hawaii trip"}},"next":null}}}
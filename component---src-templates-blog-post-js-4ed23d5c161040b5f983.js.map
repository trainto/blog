{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","data","site","siteMetadata","author","social","fixed","avatar","childImageSharp","alt","style","marginBottom","minWidth","borderRadius","imgStyle","href","twitter","target","rel","pageQuery","BlogPostTemplate","props","post","markdownRemark","siteTitle","title","pageContext","previous","next","refContent","useRef","refAdRight","useEffect","rePosition","content","current","adRight","contentRight","offsetLeft","offsetWidth","left","window","addEventListener","removeEventListener","className","top","width","height","ref","slot","display","location","frontmatter","description","excerpt","to","textDecoration","date","format","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","slug"],"mappings":"inDA6DeA,EAlDH,WACV,IAAMC,EAAI,OADM,EAqBWA,EAAKC,KAAKC,aAA7BC,EArBQ,EAqBRA,OAAQC,EArBA,EAqBAA,OAEhB,OACE,6BACE,kBAAC,IAAD,CACEC,MAAOL,EAAKM,OAAOC,gBAAgBF,MACnCG,IAAKL,EACLM,MAAO,CACLC,aAAc,EACdC,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,wCACa,IACX,gCACE,uBAAGE,KAAI,uBAAyBV,EAAOW,QAAWC,OAAO,SAASC,IAAI,uBACnEd,IAEK,IANZ,0D,gDC4DOe,GAFEC,UAlGU,SAAAC,GACvB,IAAMC,EAAOD,EAAMpB,KAAKsB,eAClBC,EAAYH,EAAMpB,KAAKC,KAAKC,aAAasB,MAFf,EAGLJ,EAAMK,YAAzBC,EAHwB,EAGxBA,SAAUC,EAHc,EAGdA,KAEZC,EAAaC,mBACbC,EAAaD,mBAqBnB,OAnBAE,qBAAU,WACR,IAAMC,EAAa,WACjB,IAAMC,EAAUL,EAAWM,QACrBC,EAAUL,EAAWI,QAC3B,GAAKD,GAAYE,EAAjB,CAIA,IAAMC,EAAeH,EAAQI,WAAaJ,EAAQK,YAClDH,EAAQ1B,MAAM8B,KAAOH,EAAe,IAAM,OAO5C,OAJAJ,IAEAQ,OAAOC,iBAAiB,SAAUT,GAE3B,kBAAMQ,OAAOE,oBAAoB,SAAUV,MACjD,IAGD,oCACE,yBAAKW,UAAU,YAAYlC,MAAO,CAAEmC,IAAK,IAAKC,MAAO,IAAKC,OAAQ,MAChE,0BAAMH,UAAU,oBAAoBI,IAAKjB,GACvC,kBAAC,IAAD,CAASkB,KAAK,aAAavC,MAAO,CAAEwC,QAAS,eAAgBJ,MAAO,IAAKC,OAAQ,SAIrF,kBAAC,IAAD,CAAQI,SAAU9B,EAAM8B,SAAU1B,MAAOD,GACvC,kBAAC,IAAD,CAAKC,MAAOH,EAAK8B,YAAY3B,MAAO4B,YAAa/B,EAAK8B,YAAYC,aAAe/B,EAAKgC,UAEtF,yBAAKV,UAAU,8BACb,4BAAQA,UAAU,kBAAkBI,IAAKnB,GACvC,4BACE,kBAAC,OAAD,CAAM0B,GAAG,IAAI7C,MAAO,CAAE8C,eAAgB,SACnChC,KAKP,yBAAKoB,UAAU,wBACb,iCACE,gCACE,4BAAKtB,EAAK8B,YAAY3B,OACtB,2BAAIH,EAAK8B,YAAYK,OAGvB,kBAAC,IAAD,CAASC,OAAO,aAAaT,KAAK,eAElC,6BAASU,wBAAyB,CAAEC,OAAQtC,EAAKuC,QAEjD,wBAAIjB,UAAU,SAEd,gCACE,kBAAC,EAAD,QAIJ,6BACE,wBACElC,MAAO,CACLwC,QAAQ,OACRY,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGtC,GACC,kBAAC,OAAD,CAAM4B,GAAI5B,EAASuC,OAAOC,KAAMjD,IAAI,QAApC,KACKS,EAASyB,YAAY3B,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAM2B,GAAI3B,EAAKsC,OAAOC,KAAMjD,IAAI,QAC7BU,EAAKwB,YAAY3B,MADpB,cAgBE","file":"component---src-templates-blog-post-js-4ed23d5c161040b5f983.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`\n        }}\n        imgStyle={{\n          borderRadius: `50%`\n        }}\n      />\n      <p>\n        Written by{' '}\n        <strong>\n          <a href={`https://twitter.com/${social.twitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            {author}\n          </a>\n        </strong>{' '}\n        who lives Seoul. Like programming and doing nothing.\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React, { useRef, useEffect } from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport './blog-post.css';\nimport Adsense from '../components/adsense';\n\nconst BlogPostTemplate = props => {\n  const post = props.data.markdownRemark;\n  const siteTitle = props.data.site.siteMetadata.title;\n  const { previous, next } = props.pageContext;\n\n  const refContent = useRef();\n  const refAdRight = useRef();\n\n  useEffect(() => {\n    const rePosition = () => {\n      const content = refContent.current;\n      const adRight = refAdRight.current;\n      if (!content || !adRight) {\n        return;\n      }\n\n      const contentRight = content.offsetLeft + content.offsetWidth;\n      adRight.style.left = contentRight + 100 + 'px';\n    };\n\n    rePosition();\n\n    window.addEventListener('resize', rePosition);\n\n    return () => window.removeEventListener('resize', rePosition);\n  }, []);\n\n  return (\n    <>\n      <div className=\"fixed-top\" style={{ top: 100, width: 160, height: 600 }}>\n        <span className=\"position-relative\" ref={refAdRight}>\n          <Adsense slot=\"8329899743\" style={{ display: 'inline-block', width: 160, height: 600 }} />\n        </span>\n      </div>\n\n      <Layout location={props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt} />\n\n        <div className=\"row justify-content-center\">\n          <header className=\"col-12 col-md-8\" ref={refContent}>\n            <h3>\n              <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                {siteTitle}\n              </Link>\n            </h3>\n          </header>\n\n          <div className=\"col-12 col-md-8 mt-3\">\n            <article>\n              <header>\n                <h1>{post.frontmatter.title}</h1>\n                <p>{post.frontmatter.date}</p>\n              </header>\n\n              <Adsense format=\"horizontal\" slot=\"4364348128\" />\n\n              <section dangerouslySetInnerHTML={{ __html: post.html }} />\n\n              <hr className=\"my-4\" />\n\n              <footer>\n                <Bio />\n              </footer>\n            </article>\n\n            <nav>\n              <ul\n                style={{\n                  display: `flex`,\n                  flexWrap: `wrap`,\n                  justifyContent: `space-between`,\n                  listStyle: `none`,\n                  padding: 0\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link to={previous.fields.slug} rel=\"prev\">\n                      ← {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} →\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
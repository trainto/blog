{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/adsense.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","data","site","siteMetadata","author","social","fixed","avatar","childImageSharp","alt","style","marginBottom","minWidth","borderRadius","imgStyle","href","twitter","target","rel","Adsense","useEffect","script","document","createElement","src","async","body","appendChild","window","adsbygoogle","push","className","display","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","BlogPostTemplate","render","post","this","props","markdownRemark","siteTitle","title","pageContext","previous","next","location","frontmatter","description","excerpt","to","textDecoration","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","slug","React","Component","pageQuery"],"mappings":"gjDA6DeA,EAlDH,WACV,IAAMC,EAAI,OADM,EAqBWA,EAAKC,KAAKC,aAA7BC,EArBQ,EAqBRA,OAAQC,EArBA,EAqBAA,OAEhB,OACE,6BACE,kBAAC,IAAD,CACEC,MAAOL,EAAKM,OAAOC,gBAAgBF,MACnCG,IAAKL,EACLM,MAAO,CACLC,aAAc,EACdC,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,wCACa,IACX,gCACE,uBAAGE,KAAI,uBAAyBV,EAAOW,QAAWC,OAAO,SAASC,IAAI,uBACnEd,IAEK,IANZ,0D,wBChBSe,G,UA9BC,WAYd,OAXAC,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,iEACbH,EAAOI,OAAQ,EAEfH,SAASI,KAAKC,YAAYN,IAENO,OAAOC,aAAe,IAC9BC,KAAK,MAChB,IAGD,oCAGE,yBACEC,UAAU,cACVrB,MAAO,CAAEsB,QAAS,SAClBC,iBAAe,0BACfC,eAAa,aACbC,iBAAe,OACfC,6BAA2B,Y,8CChB7BC,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMxC,KAAKyC,eACvBC,EAAYH,KAAKC,MAAMxC,KAAKC,KAAKC,aAAayC,MAF7C,EAGoBJ,KAAKC,MAAMI,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUR,KAAKC,MAAMO,SAAUJ,MAAOD,GAC5C,kBAAC,IAAD,CAAKC,MAAOL,EAAKU,YAAYL,MAAOM,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEtF,yBAAKpB,UAAU,8BACb,4BAAQA,UAAU,mBAChB,4BACE,kBAAC,OAAD,CAAMqB,GAAG,IAAI1C,MAAO,CAAE2C,eAAgB,SACnCV,KAKP,yBAAKZ,UAAU,wBACb,iCACE,gCACE,4BAAKQ,EAAKU,YAAYL,OACtB,2BAAIL,EAAKU,YAAYK,OAGvB,kBAAC,EAAD,MAEA,6BAASC,wBAAyB,CAAEC,OAAQjB,EAAKkB,QAEjD,wBAAI1B,UAAU,SAEd,gCACE,kBAAC,EAAD,QAIJ,6BACE,wBACErB,MAAO,CACLsB,QAAQ,OACR0B,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGf,GACC,kBAAC,OAAD,CAAMM,GAAIN,EAASgB,OAAOC,KAAM7C,IAAI,QAApC,KACK4B,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMK,GAAIL,EAAKe,OAAOC,KAAM7C,IAAI,QAC7B6B,EAAKE,YAAYL,MADpB,a,GAxDWoB,IAAMC,WAwExBC,GAFE7B,YAEO","file":"component---src-templates-blog-post-js-3880e5cea44e8558105a.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`\n        }}\n        imgStyle={{\n          borderRadius: `50%`\n        }}\n      />\n      <p>\n        Written by{' '}\n        <strong>\n          <a href={`https://twitter.com/${social.twitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            {author}\n          </a>\n        </strong>{' '}\n        who lives Seoul. Like programming and doing nothing.\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React, { useEffect } from 'react';\n\nconst Adsense = () => {\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    const adsbygoogle = window.adsbygoogle || [];\n    adsbygoogle.push({});\n  }, []);\n\n  return (\n    <>\n      {/* <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script> */}\n\n      <ins\n        className=\"adsbygoogle\"\n        style={{ display: 'block' }}\n        data-ad-client=\"ca-pub-6978978720477594\"\n        data-ad-slot=\"4364348128\"\n        data-ad-format=\"auto\"\n        data-full-width-responsive=\"true\"\n      />\n\n      {/* <script>(adsbygoogle = window.adsbygoogle || []).push({});</script> */}\n    </>\n  );\n};\n\nexport default Adsense;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport './blog-post.css';\nimport Adsense from '../components/adsense';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt} />\n\n        <div className=\"row justify-content-center\">\n          <header className=\"col-12 col-md-8\">\n            <h3>\n              <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                {siteTitle}\n              </Link>\n            </h3>\n          </header>\n\n          <div className=\"col-12 col-md-8 mt-3\">\n            <article>\n              <header>\n                <h1>{post.frontmatter.title}</h1>\n                <p>{post.frontmatter.date}</p>\n              </header>\n\n              <Adsense />\n\n              <section dangerouslySetInnerHTML={{ __html: post.html }} />\n\n              <hr className=\"my-4\" />\n\n              <footer>\n                <Bio />\n              </footer>\n            </article>\n\n            <nav>\n              <ul\n                style={{\n                  display: `flex`,\n                  flexWrap: `wrap`,\n                  justifyContent: `space-between`,\n                  listStyle: `none`,\n                  padding: 0\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link to={previous.fields.slug} rel=\"prev\">\n                      ← {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} →\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}